def  UnetResNet50(inputs):
  resNet50 = ResNet50(include_top=False,input_shape=(512,512,3),pooling=None)
  resNet50.trainable = False
  conv1_pad = resNet50.get_layer('conv1_pad')(inputs)
  conv1_conv = resNet50.get_layer('conv1_conv')(conv1_pad)#concate with 256
  conv1_bn = resNet50.get_layer('conv1_bn')(conv1_conv)
  conv1_relu = resNet50.get_layer('conv1_relu')(conv1_bn)
  pool1_pad = resNet50.get_layer('pool1_pad')(conv1_relu)
  pool1_pool = resNet50.get_layer('pool1_pool')(pool1_pad)
  #---------------------------------------------------------------
  conv2_block1_1_conv = resNet50.get_layer('conv2_block1_1_conv')(pool1_pool)#concate with 128
  conv2_block1_1_bn = resNet50.get_layer('conv2_block1_1_bn')(conv2_block1_1_conv)
  conv2_block1_1_relu = resNet50.get_layer('conv2_block1_1_relu')(conv2_block1_1_bn)
  conv2_block1_2_conv = resNet50.get_layer('conv2_block1_2_conv')(conv2_block1_1_relu)
  conv2_block1_2_bn = resNet50.get_layer('conv2_block1_2_bn')(conv2_block1_2_conv)
  conv2_block1_2_relu = resNet50.get_layer('conv2_block1_2_relu')(conv2_block1_2_bn)

  conv2_block1_0_conv = resNet50.get_layer('conv2_block1_0_conv')(pool1_pool)
  conv2_block1_3_conv = resNet50.get_layer('conv2_block1_3_conv')(conv2_block1_2_relu)
  conv2_block1_0_bn = resNet50.get_layer('conv2_block1_0_bn')(conv2_block1_0_conv)
  conv2_block1_3_bn = resNet50.get_layer('conv2_block1_3_bn')(conv2_block1_3_conv)
  conv2_block1_add = resNet50.get_layer('conv2_block1_add')([conv2_block1_0_bn,conv2_block1_3_bn])
  conv2_block1_out = resNet50.get_layer('conv2_block1_out')(conv2_block1_add)

  conv2_block2_1_conv = resNet50.get_layer('conv2_block2_1_conv')(conv2_block1_out)
  conv2_block2_1_bn = resNet50.get_layer('conv2_block2_1_bn')(conv2_block2_1_conv)
  conv2_block2_1_relu = resNet50.get_layer('conv2_block2_1_relu')(conv2_block2_1_bn)
  conv2_block2_2_conv = resNet50.get_layer('conv2_block2_2_conv')(conv2_block2_1_relu)
  conv2_block2_2_bn = resNet50.get_layer('conv2_block2_2_bn')(conv2_block2_2_conv)
  conv2_block2_2_relu = resNet50.get_layer('conv2_block2_2_relu')(conv2_block2_2_bn)
  conv2_block2_3_conv = resNet50.get_layer('conv2_block2_3_conv')(conv2_block2_2_relu)
  conv2_block2_3_bn = resNet50.get_layer('conv2_block2_3_bn')(conv2_block2_3_conv)
  conv2_block2_add = resNet50.get_layer('conv2_block2_add')([conv2_block1_out,conv2_block2_3_bn])
  conv2_block2_out = resNet50.get_layer('conv2_block2_out')(conv2_block2_add)

  conv2_block3_1_conv = resNet50.get_layer('conv2_block3_1_conv')(conv2_block2_out)
  conv2_block3_1_bn = resNet50.get_layer('conv2_block3_1_bn')(conv2_block3_1_conv)
  conv2_block3_1_relu = resNet50.get_layer('conv2_block3_1_relu')(conv2_block3_1_bn)
  conv2_block3_2_conv = resNet50.get_layer('conv2_block3_2_conv')(conv2_block3_1_relu)
  conv2_block3_2_bn = resNet50.get_layer('conv2_block3_2_bn')(conv2_block3_2_conv)
  conv2_block3_2_relu = resNet50.get_layer('conv2_block3_2_relu')(conv2_block3_2_bn)
  conv2_block3_3_conv = resNet50.get_layer('conv2_block3_3_conv')(conv2_block3_2_relu)
  conv2_block3_3_bn = resNet50.get_layer('conv2_block3_3_bn')(conv2_block3_3_conv)
  conv2_block3_add = resNet50.get_layer('conv2_block3_add')([conv2_block2_out,conv2_block3_3_bn])
  conv2_block3_out = resNet50.get_layer('conv2_block3_out')(conv2_block3_add)
  #-------------------------------------------------------------------------
  conv3_block1_1_conv = resNet50.get_layer('conv3_block1_1_conv')(conv2_block3_out)#concate with 64
  conv3_block1_1_bn = resNet50.get_layer('conv3_block1_1_bn')(conv3_block1_1_conv)
  conv3_block1_1_relu = resNet50.get_layer('conv3_block1_1_relu')(conv3_block1_1_bn)
  conv3_block1_2_conv = resNet50.get_layer('conv3_block1_2_conv')(conv3_block1_1_relu)
  conv3_block1_2_bn = resNet50.get_layer('conv3_block1_2_bn')(conv3_block1_2_conv)
  conv3_block1_2_relu = resNet50.get_layer('conv3_block1_2_relu')(conv3_block1_2_bn)

  conv3_block1_0_conv = resNet50.get_layer('conv3_block1_0_conv')(conv2_block3_out)
  conv3_block1_3_conv = resNet50.get_layer('conv3_block1_3_conv')(conv3_block1_2_relu)
  conv3_block1_0_bn = resNet50.get_layer('conv3_block1_0_bn')(conv3_block1_0_conv)
  conv3_block1_3_bn = resNet50.get_layer('conv3_block1_3_bn')(conv3_block1_3_conv)
  conv3_block1_add = resNet50.get_layer('conv3_block1_add')([conv3_block1_0_bn,conv3_block1_3_bn])
  conv3_block1_out = resNet50.get_layer('conv3_block1_out')(conv3_block1_add)

  conv3_block2_1_conv = resNet50.get_layer('conv3_block2_1_conv')(conv3_block1_out)
  conv3_block2_1_bn = resNet50.get_layer('conv3_block2_1_bn')(conv3_block2_1_conv)
  conv3_block2_1_relu = resNet50.get_layer('conv3_block2_1_relu')(conv3_block2_1_bn)
  conv3_block2_2_conv = resNet50.get_layer('conv3_block2_2_conv')(conv3_block2_1_relu)
  conv3_block2_2_bn = resNet50.get_layer('conv3_block2_2_bn')(conv3_block2_2_conv)
  conv3_block2_2_relu = resNet50.get_layer('conv3_block2_2_relu')(conv3_block2_2_bn)
  conv3_block2_3_conv = resNet50.get_layer('conv3_block2_3_conv')(conv3_block2_2_relu)
  conv3_block2_3_bn = resNet50.get_layer('conv3_block2_3_bn')(conv3_block2_3_conv)
  conv3_block2_add = resNet50.get_layer('conv3_block2_add')([conv3_block1_out,conv3_block2_3_bn])
  conv3_block2_out = resNet50.get_layer('conv3_block2_out')(conv3_block2_add)

  conv3_block3_1_conv = resNet50.get_layer('conv3_block3_1_conv')(conv3_block2_out)
  conv3_block3_1_bn = resNet50.get_layer('conv3_block3_1_bn')(conv3_block3_1_conv)
  conv3_block3_1_relu = resNet50.get_layer('conv3_block3_1_relu')(conv3_block3_1_bn)
  conv3_block3_2_conv = resNet50.get_layer('conv3_block3_2_conv')(conv3_block3_1_relu)
  conv3_block3_2_bn = resNet50.get_layer('conv3_block3_2_bn')(conv3_block3_2_conv)
  conv3_block3_2_relu = resNet50.get_layer('conv3_block3_2_relu')(conv3_block3_2_bn)
  conv3_block3_3_conv = resNet50.get_layer('conv3_block3_3_conv')(conv3_block3_2_relu)
  conv3_block3_3_bn = resNet50.get_layer('conv3_block3_3_bn')(conv3_block3_3_conv)
  conv3_block3_add = resNet50.get_layer('conv3_block3_add')([conv3_block2_out,conv3_block3_3_bn])
  conv3_block3_out = resNet50.get_layer('conv3_block3_out')(conv3_block3_add)

  conv3_block4_1_conv = resNet50.get_layer('conv3_block4_1_conv')(conv3_block3_out)
  conv3_block4_1_bn = resNet50.get_layer('conv3_block4_1_bn')(conv3_block4_1_conv)
  conv3_block4_1_relu = resNet50.get_layer('conv3_block4_1_relu')(conv3_block4_1_bn)
  conv3_block4_2_conv = resNet50.get_layer('conv3_block4_2_conv')(conv3_block4_1_relu)
  conv3_block4_2_bn = resNet50.get_layer('conv3_block4_2_bn')(conv3_block4_2_conv)
  conv3_block4_2_relu = resNet50.get_layer('conv3_block4_2_relu')(conv3_block4_2_bn)
  conv3_block4_3_conv = resNet50.get_layer('conv3_block4_3_conv')(conv3_block4_2_relu)
  conv3_block4_3_bn = resNet50.get_layer('conv3_block4_3_bn')(conv3_block4_3_conv)
  conv3_block4_add = resNet50.get_layer('conv3_block4_add')([conv3_block3_out,conv3_block4_3_bn])
  conv3_block4_out = resNet50.get_layer('conv3_block4_out')(conv3_block4_add)
  #-------------------------------------------------------------------------
  maxpool = MaxPool2D()(conv3_block4_out)

  conv5 = Conv2D(1024, 3, activation = 'relu', padding = 'same', kernel_initializer = 'he_normal')(maxpool)
  conv5 = Conv2D(1024, 3, activation = 'relu', padding = 'same', kernel_initializer = 'he_normal')(conv5)
  drop5 = Dropout(0.5)(conv5)

  up6 = Conv2D(512, 2, activation = 'relu', padding = 'same', kernel_initializer = 'he_normal')(UpSampling2D(size = (2,2))(drop5))
  merge6 = concatenate([conv3_block4_out,up6], axis = 3)
  conv6 = Conv2D(512, 3, activation = 'relu', padding = 'same', kernel_initializer = 'he_normal')(merge6)
  conv6 = Conv2D(512, 3, activation = 'relu', padding = 'same', kernel_initializer = 'he_normal')(conv6)

  up7 = Conv2D(256, 2, activation = 'relu', padding = 'same', kernel_initializer = 'he_normal')(UpSampling2D(size = (2,2))(conv6))
  merge7 = concatenate([conv2_block3_out,up7], axis = 3)
  conv7 = Conv2D(256, 3, activation = 'relu', padding = 'same', kernel_initializer = 'he_normal')(merge7)
  conv7 = Conv2D(256, 3, activation = 'relu', padding = 'same', kernel_initializer = 'he_normal')(conv7)

  up8 = Conv2D(128, 2, activation = 'relu', padding = 'same', kernel_initializer = 'he_normal')(UpSampling2D(size = (2,2))(conv7))
  merge8 = concatenate([conv1_conv,up8], axis = 3)
  conv8 = Conv2D(128, 3, activation = 'relu', padding = 'same', kernel_initializer = 'he_normal')(merge8)
  conv8 = Conv2D(128, 3, activation = 'relu', padding = 'same', kernel_initializer = 'he_normal')(conv8)

  up9 = Conv2D(64, 2, activation = 'relu', padding = 'same', kernel_initializer = 'he_normal')(UpSampling2D(size = (2,2))(conv8))
  # merge9 = concatenate([conv1,up9], axis = 3)
  conv9 = Conv2D(64, 3, activation = 'relu', padding = 'same', kernel_initializer = 'he_normal')(up9)
  conv10 = Conv2D(1, 1, activation = 'sigmoid')(conv9)

  model = Model(inputs, conv10)
  return model
